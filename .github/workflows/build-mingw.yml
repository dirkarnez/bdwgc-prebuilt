name: cpp-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'c*'

jobs:
  build:
    strategy:
      matrix:
        compiler:
        - {
            name: "x86_64-8.1.0-release-posix-seh-rt_v6-rev0",
            url: "https://github.com/dirkarnez/cpp-tools/raw/main/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z"
          }
        - {
            name: "winlibs-x86_64-posix-seh-gcc-11.2.0-mingw-w64-9.0.0-r1",
            url: "https://github.com/brechtsanders/winlibs_mingw/releases/download/11.2.0-12.0.1-9.0.0-r1/winlibs-x86_64-posix-seh-gcc-11.2.0-mingw-w64-9.0.0-r1.zip"
          }
    runs-on: windows-latest
    env:
      libraryName: bdwgc
      installationPath: bdwgc-installation
      tagName: v8.2.4
    steps:
      - uses: actions/checkout@v3
      
      - name: git clone
        shell: cmd
        run: git clone --recursive https://github.com/ivmai/bdwgc.git && cd bdwgc && git checkout ${{ env.tagName }}

      # - shell: cmd
      #   run: |
      #     curl https://www.hboehm.info/gc/gc_source/gc-8.2.2.tar.gz -L -O
      
      # - name: Install MSYS2
      #   uses: msys2/setup-msys2@v2
      #   with:
      #     update: true
      #     msystem: MINGW64
      #     install: git make autoconf automake libtool autogen perl patch gperf pkgconf
          
      - name: download compiler
        shell: cmd
        run: |
          curl ${{ matrix.compiler.url }} -L --output compiler &&^
          7z.exe x compiler

      - name: curl cmake-3.24.0-windows-x86_64.zip
        shell: cmd
        run: curl https://github.com/Kitware/CMake/releases/download/v3.24.0/cmake-3.24.0-windows-x86_64.zip -L --output cmake-3.24.0-windows-x86_64.zip && dir && 7z.exe x cmake-3.24.0-windows-x86_64.zip
        
          
      - name: curl PortableGit-2.38.1-64-bit.7z.exe
        shell: cmd
        run:  curl https://github.com/git-for-windows/git/releases/download/v2.38.1.windows.1/PortableGit-2.38.1-64-bit.7z.exe -L --output PortableGit-2.38.1-64-bit.7z.exe && dir && 7z.exe x PortableGit-2.38.1-64-bit.7z.exe -o"${{ github.workspace }}\PortableGit-2.38.1-64-bit"
        
      # - shell: cmd
      #   run: |
      #     .\PortableGit-2.38.1-64-bit\usr\bin\tar.exe -zxvf gc-8.2.2.tar.gz &&^
      #     rename gc-8.2.2 gc

      # - shell: msys2 {0}
      #   run: pkg-config --version

            # ./configure --help &&
            # ./configure --enable-static=yes --enable-shared=yes --disable-java-finalization --prefix="$(pwd)/${{ env.installationPath }}" &&
            # make install
            
      - name: set PATH, check mingw version, cmake generate, build and install
        shell: msys2 {0}
        run: |
            workspace=$(pwd) &&
            export PATH="$workspace/mingw64:$workspace/mingw64/bin:$workspace/msys64/usr/bin:/usr/bin:$workspace/cmake-3.24.0-windows-x86_64/bin" &&
            cd bdwgc &&
            g++ --version && 
            cmake.exe -G"MinGW Makefiles" \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_SHARED_LIBS=ON \
            -Denable_cplusplus=ON \
            -Denable_docs=OFF \
            -DCMAKE_INSTALL_PREFIX="cmake-build/${{ env.cmakeInstallationPath }}" -B./cmake-build && \
            cd cmake-build && cmake --build . && cmake --install . 

      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: "bdwgc/cmake-build/${{ env.cmakeInstallationPath }}"
          filename: "bdwgc-${{ github.ref_name }}-${{ matrix.compiler.name }}.zip"
        
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "bdwgc/cmake-build/${{ env.cmakeInstallationPath }}/bdwgc-${{ github.ref_name }}-${{ matrix.compiler.name }}.zip"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
